version: "3.9"
services:
  gr1d99-subscription-api:
    image: gr1d99-subscription-api
    build:
      context: .
      dockerfile: gr1d99-subscription-api/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on: 
      otel-collector:
        condition: service_started

  otel-collector:
    container_name: otelcol
    image: otel/opentelemetry-collector-contrib:latest
    restart: unless-stopped
    command: [ "--config=/etc/otelcol-config.yml" ]
    volumes:
      - /:/hostfs:ro
      - ./collector-config.yaml:/etc/otelcol-config.yml
    ports:
      - "1888:1888"   # pprof extension
      - "13133:13133" # health_check extension
      - "55679:55679" # zpages extension
      - "4318:4318"
      - "5317:4317"
      - "8888:8888"
    depends_on:
      - jaeger

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    command:
      - "--memory.max-traces=5000"
      - "--query.base-path=/jaeger/ui"
      - "--prometheus.server-url=http://prometheus:9090"
      - "--prometheus.query.normalize-calls=true"
      - "--prometheus.query.normalize-duration=true"
    ports:
      - "16686:16686"
      - "9411:9411"
      - "4317:4317"
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
#      - COLLECTOR_OTLP_GRPC_HOST_PORT=jaeger:4317
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus-config.yaml
    restart: unless-stopped
    ports:
      - "9090:9090"
