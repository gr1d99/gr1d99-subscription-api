version: "3.9"
services:
  gr1d99-subscription-api:
    image: gr1d99-subscription-api
    build:
      context: .
      dockerfile: gr1d99-subscription-api/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on: 
      otel-collector:
        condition: service_started

  otel-collector:
    image: otel/opentelemetry-collector
    restart: unless-stopped
    command: [ "--config=/etc/collector-config.yaml", "${OTELCOL_ARGS}" ]
    volumes:
      - ./collector-config.yaml:/etc/collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger
#      - zipkin-all-in-one
  jaeger:
    image: jaegertracing/all-in-one:latest
    command:
      - "--memory.max-traces=5000"
      - "--query.base-path=/jaeger/ui"
      - "--prometheus.server-url=http://prometheus:9090"
#      - "--prometheus.query.normalize-calls=true"
#      - "--prometheus.query.normalize-duration=true"
    ports:
      - "16686:16686"
      - "4317"
      - "4318:4318"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - METRICS_STORAGE_TYPE=prometheus
  
  zipkin:
    image: openzipkin/zipkin:latest
    ports:
      - "9412:9411"
  
  prometheus:
    image: prom/prometheus:latest
    restart: always
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    command: 
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-remote-write-receiver"
#      - "--prometheus.query.support-spanmetrics-connector=true"
    ports:
      - "9090:9090"
